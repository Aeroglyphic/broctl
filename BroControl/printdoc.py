import sys

from BroControl import options
from BroControl import doc
from BroControl import plugin
from BroControl import node

# Prints the command docstrings in a form suitable for direct inclusion
# into the documentation.
def printCommands(cls):
    cmds = []

    for i in cls.__dict__:
        doc = cls.__dict__[i].__doc__
        if i.startswith("do_") and doc:
            cmds += [(i[3:], doc)]

    cmds.sort()

    for (cmd, doc) in cmds:
        if doc.startswith("- "):
            # First line are arguments.
            doc = doc.split("\n")
            args = doc[0][2:]
            doc = "\n".join(doc[1:])
        else:
            args = ""

        if args:
            args = (" *%s*" % args)
        else:
            args = ""

        output = ""
        for line in doc.split("\n"):
            line = line.strip()
            output += "    " + line + "\n"

        output = output.strip()

        print
        print ".. _%s:\n\n*%s*%s\n    %s" % (cmd, cmd, args, output)
        print


# Print options documentation.
def printOptions():
    print "User Options"
    print "~~~~~~~~~~~~"

    out, err = options.printOptions(options.Option.USER)
    print out,
    if err:
        print >>sys.stderr, err

    print
    print "Internal Options"
    print "~~~~~~~~~~~~~~~~"
    print

    out, err = options.printOptions(options.Option.AUTOMATIC)
    print out,
    if err:
        print >>sys.stderr, err


# Print plugin and node documentation.
def printPlugin():
    print doc.printClass(plugin.Plugin, tag="no-methods"),
    print doc.printClass(plugin.Plugin, header=False),
    print doc.printClass(plugin.Plugin, "override", header=False),

    print doc.printClass(node.Node),

def printBroctlDocs(mainpath, broctlclass):
    print ".. Autogenerated. Do not edit.\n"
    mainrst = open(mainpath, "r")
    for line in mainrst:
        fields = line.strip().split(None, 2)
        if len(fields) == 3 and fields[0] == ".." and fields[1] == "include::":
            if fields[2] == "commands.rst":
                printCommands(broctlclass)
            elif fields[2] == "options.rst":
                printOptions()
            elif fields[2] == "plugins.rst":
                printPlugin()
        else:
            print line,
    mainrst.close()

